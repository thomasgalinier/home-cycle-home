/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as ClientRouteImport } from './routes/_client'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as R404RouteImport } from './routes/404'
import { Route as ClientIndexRouteImport } from './routes/_client/index'
import { Route as AuthSigninRouteImport } from './routes/auth/Signin'
import { Route as AuthenticatedAdminIndexRouteImport } from './routes/_authenticated/admin/index'
import { Route as AuthenticatedAdminPlanningRouteImport } from './routes/_authenticated/admin/planning'
import { Route as AuthenticatedAdminDashboardRouteImport } from './routes/_authenticated/admin/dashboard'
import { Route as AuthenticatedAdminPlanningIndexRouteImport } from './routes/_authenticated/admin/planning/index'
import { Route as AuthenticatedAdminForfaitIndexRouteImport } from './routes/_authenticated/admin/forfait/index'
import { Route as AuthenticatedAdminComptesIndexRouteImport } from './routes/_authenticated/admin/comptes/index'
import { Route as AuthenticatedAdminCarteIndexRouteImport } from './routes/_authenticated/admin/carte/index'
import { Route as AuthenticatedAdminForfaitCreateRouteImport } from './routes/_authenticated/admin/forfait/create'
import { Route as AuthenticatedAdminComptesCreateRouteImport } from './routes/_authenticated/admin/comptes/create'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const ClientRoute = ClientRouteImport.update({
  id: '/_client',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const ClientIndexRoute = ClientIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ClientRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/Signin',
  path: '/Signin',
  getParentRoute: () => AuthRoute,
} as any)
const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAdminPlanningRoute =
  AuthenticatedAdminPlanningRouteImport.update({
    id: '/admin/planning',
    path: '/admin/planning',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminDashboardRoute =
  AuthenticatedAdminDashboardRouteImport.update({
    id: '/admin/dashboard',
    path: '/admin/dashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminPlanningIndexRoute =
  AuthenticatedAdminPlanningIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAdminPlanningRoute,
  } as any)
const AuthenticatedAdminForfaitIndexRoute =
  AuthenticatedAdminForfaitIndexRouteImport.update({
    id: '/admin/forfait/',
    path: '/admin/forfait/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminComptesIndexRoute =
  AuthenticatedAdminComptesIndexRouteImport.update({
    id: '/admin/comptes/',
    path: '/admin/comptes/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminCarteIndexRoute =
  AuthenticatedAdminCarteIndexRouteImport.update({
    id: '/admin/carte/',
    path: '/admin/carte/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminForfaitCreateRoute =
  AuthenticatedAdminForfaitCreateRouteImport.update({
    id: '/admin/forfait/create',
    path: '/admin/forfait/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminComptesCreateRoute =
  AuthenticatedAdminComptesCreateRouteImport.update({
    id: '/admin/comptes/create',
    path: '/admin/comptes/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/404': typeof R404Route
  '/auth': typeof AuthRouteWithChildren
  '/auth/Signin': typeof AuthSigninRoute
  '/': typeof ClientIndexRoute
  '/admin/dashboard': typeof AuthenticatedAdminDashboardRoute
  '/admin/planning': typeof AuthenticatedAdminPlanningRouteWithChildren
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/admin/comptes/create': typeof AuthenticatedAdminComptesCreateRoute
  '/admin/forfait/create': typeof AuthenticatedAdminForfaitCreateRoute
  '/admin/carte': typeof AuthenticatedAdminCarteIndexRoute
  '/admin/comptes': typeof AuthenticatedAdminComptesIndexRoute
  '/admin/forfait': typeof AuthenticatedAdminForfaitIndexRoute
  '/admin/planning/': typeof AuthenticatedAdminPlanningIndexRoute
}
export interface FileRoutesByTo {
  '/404': typeof R404Route
  '/auth': typeof AuthRouteWithChildren
  '/auth/Signin': typeof AuthSigninRoute
  '/': typeof ClientIndexRoute
  '/admin/dashboard': typeof AuthenticatedAdminDashboardRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/admin/comptes/create': typeof AuthenticatedAdminComptesCreateRoute
  '/admin/forfait/create': typeof AuthenticatedAdminForfaitCreateRoute
  '/admin/carte': typeof AuthenticatedAdminCarteIndexRoute
  '/admin/comptes': typeof AuthenticatedAdminComptesIndexRoute
  '/admin/forfait': typeof AuthenticatedAdminForfaitIndexRoute
  '/admin/planning': typeof AuthenticatedAdminPlanningIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/404': typeof R404Route
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_client': typeof ClientRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/Signin': typeof AuthSigninRoute
  '/_client/': typeof ClientIndexRoute
  '/_authenticated/admin/dashboard': typeof AuthenticatedAdminDashboardRoute
  '/_authenticated/admin/planning': typeof AuthenticatedAdminPlanningRouteWithChildren
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/admin/comptes/create': typeof AuthenticatedAdminComptesCreateRoute
  '/_authenticated/admin/forfait/create': typeof AuthenticatedAdminForfaitCreateRoute
  '/_authenticated/admin/carte/': typeof AuthenticatedAdminCarteIndexRoute
  '/_authenticated/admin/comptes/': typeof AuthenticatedAdminComptesIndexRoute
  '/_authenticated/admin/forfait/': typeof AuthenticatedAdminForfaitIndexRoute
  '/_authenticated/admin/planning/': typeof AuthenticatedAdminPlanningIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/404'
    | '/auth'
    | '/auth/Signin'
    | '/'
    | '/admin/dashboard'
    | '/admin/planning'
    | '/admin'
    | '/admin/comptes/create'
    | '/admin/forfait/create'
    | '/admin/carte'
    | '/admin/comptes'
    | '/admin/forfait'
    | '/admin/planning/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/404'
    | '/auth'
    | '/auth/Signin'
    | '/'
    | '/admin/dashboard'
    | '/admin'
    | '/admin/comptes/create'
    | '/admin/forfait/create'
    | '/admin/carte'
    | '/admin/comptes'
    | '/admin/forfait'
    | '/admin/planning'
  id:
    | '__root__'
    | '/404'
    | '/_authenticated'
    | '/_client'
    | '/auth'
    | '/auth/Signin'
    | '/_client/'
    | '/_authenticated/admin/dashboard'
    | '/_authenticated/admin/planning'
    | '/_authenticated/admin/'
    | '/_authenticated/admin/comptes/create'
    | '/_authenticated/admin/forfait/create'
    | '/_authenticated/admin/carte/'
    | '/_authenticated/admin/comptes/'
    | '/_authenticated/admin/forfait/'
    | '/_authenticated/admin/planning/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  R404Route: typeof R404Route
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  ClientRoute: typeof ClientRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_client': {
      id: '/_client'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ClientRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_client/': {
      id: '/_client/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ClientIndexRouteImport
      parentRoute: typeof ClientRoute
    }
    '/auth/Signin': {
      id: '/auth/Signin'
      path: '/Signin'
      fullPath: '/auth/Signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/planning': {
      id: '/_authenticated/admin/planning'
      path: '/admin/planning'
      fullPath: '/admin/planning'
      preLoaderRoute: typeof AuthenticatedAdminPlanningRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/dashboard': {
      id: '/_authenticated/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AuthenticatedAdminDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/planning/': {
      id: '/_authenticated/admin/planning/'
      path: '/'
      fullPath: '/admin/planning/'
      preLoaderRoute: typeof AuthenticatedAdminPlanningIndexRouteImport
      parentRoute: typeof AuthenticatedAdminPlanningRoute
    }
    '/_authenticated/admin/forfait/': {
      id: '/_authenticated/admin/forfait/'
      path: '/admin/forfait'
      fullPath: '/admin/forfait'
      preLoaderRoute: typeof AuthenticatedAdminForfaitIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/comptes/': {
      id: '/_authenticated/admin/comptes/'
      path: '/admin/comptes'
      fullPath: '/admin/comptes'
      preLoaderRoute: typeof AuthenticatedAdminComptesIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/carte/': {
      id: '/_authenticated/admin/carte/'
      path: '/admin/carte'
      fullPath: '/admin/carte'
      preLoaderRoute: typeof AuthenticatedAdminCarteIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/forfait/create': {
      id: '/_authenticated/admin/forfait/create'
      path: '/admin/forfait/create'
      fullPath: '/admin/forfait/create'
      preLoaderRoute: typeof AuthenticatedAdminForfaitCreateRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/comptes/create': {
      id: '/_authenticated/admin/comptes/create'
      path: '/admin/comptes/create'
      fullPath: '/admin/comptes/create'
      preLoaderRoute: typeof AuthenticatedAdminComptesCreateRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedAdminPlanningRouteChildren {
  AuthenticatedAdminPlanningIndexRoute: typeof AuthenticatedAdminPlanningIndexRoute
}

const AuthenticatedAdminPlanningRouteChildren: AuthenticatedAdminPlanningRouteChildren =
  {
    AuthenticatedAdminPlanningIndexRoute: AuthenticatedAdminPlanningIndexRoute,
  }

const AuthenticatedAdminPlanningRouteWithChildren =
  AuthenticatedAdminPlanningRoute._addFileChildren(
    AuthenticatedAdminPlanningRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAdminDashboardRoute: typeof AuthenticatedAdminDashboardRoute
  AuthenticatedAdminPlanningRoute: typeof AuthenticatedAdminPlanningRouteWithChildren
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedAdminComptesCreateRoute: typeof AuthenticatedAdminComptesCreateRoute
  AuthenticatedAdminForfaitCreateRoute: typeof AuthenticatedAdminForfaitCreateRoute
  AuthenticatedAdminCarteIndexRoute: typeof AuthenticatedAdminCarteIndexRoute
  AuthenticatedAdminComptesIndexRoute: typeof AuthenticatedAdminComptesIndexRoute
  AuthenticatedAdminForfaitIndexRoute: typeof AuthenticatedAdminForfaitIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminDashboardRoute: AuthenticatedAdminDashboardRoute,
  AuthenticatedAdminPlanningRoute: AuthenticatedAdminPlanningRouteWithChildren,
  AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
  AuthenticatedAdminComptesCreateRoute: AuthenticatedAdminComptesCreateRoute,
  AuthenticatedAdminForfaitCreateRoute: AuthenticatedAdminForfaitCreateRoute,
  AuthenticatedAdminCarteIndexRoute: AuthenticatedAdminCarteIndexRoute,
  AuthenticatedAdminComptesIndexRoute: AuthenticatedAdminComptesIndexRoute,
  AuthenticatedAdminForfaitIndexRoute: AuthenticatedAdminForfaitIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface ClientRouteChildren {
  ClientIndexRoute: typeof ClientIndexRoute
}

const ClientRouteChildren: ClientRouteChildren = {
  ClientIndexRoute: ClientIndexRoute,
}

const ClientRouteWithChildren =
  ClientRoute._addFileChildren(ClientRouteChildren)

interface AuthRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  R404Route: R404Route,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  ClientRoute: ClientRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
